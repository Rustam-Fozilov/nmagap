{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"post-modal\\\" data-v-9ea40744><div class=\\\"post-title\\\" data-v-9ea40744>Post new tweet</div><div class=\\\"post-text\\\" data-v-9ea40744><textarea rows=\\\"5\\\" placeholder=\\\"Type here...\\\" data-v-9ea40744></textarea></div><div class=\\\"post-send-btn\\\" data-v-9ea40744><button data-v-9ea40744>TWEET</button></div></div><div style=\\\"clear:both;\\\" data-v-9ea40744></div>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_the_tweet = _resolveComponent(\"the-tweet\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allTweets, tweet => {\n    return _openBlock(), _createBlock(_component_the_tweet, {\n      key: tweet.id,\n      tweet: tweet\n    }, null, 8 /* PROPS */, [\"tweet\"]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.allTweets.length !== 0 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $data.postModal = true),\n    class: \"btn-make-tweet\"\n  }, \"MAKE TWEET\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = $event => $data.postModal = false),\n    class: \"modal-container\"\n  }), _hoisted_2]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;;;uBAA3BC,oBAgBM,OAhBNC,UAgBM,sBAfJD,oBAAiFE,6BAAtDC,eAAS,EAAlBC,KAAK;yBAAvBC,aAAiFC;MAA1CC,GAAG,EAAEH,KAAK,CAACI,EAAE;MAAGJ,KAAK,EAAEA;;kCAECD,eAAS,CAACM,MAAM,wBAA/ET,oBAA0G;;IAAjGU,OAAK,sCAAEP,eAAS;IAASJ,KAAK,EAAC;KAA+C,YAAU,wCAEjGY,oBAA8D;IAAxDD,OAAK,sCAAEP,eAAS;IAAUJ,KAAK,EAAC;MACpCa,UAQM","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","tweet","_createBlock","_component_the_tweet","key","id","length","onClick","_createElementVNode","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\Rustam\\Desktop\\vue-realtime-chat\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <the-tweet v-for=\"tweet in allTweets\" :key=\"tweet.id\" :tweet=\"tweet\"></the-tweet>\r\n\r\n    <button @click=\"postModal = true\" class=\"btn-make-tweet\" v-if=\"allTweets.length !== 0\">MAKE TWEET</button>\r\n\r\n    <div @click=\"postModal = false\" class=\"modal-container\"></div>\r\n      <div class=\"post-modal\">\r\n        <div class=\"post-title\">Post new tweet</div>\r\n        <div class=\"post-text\">\r\n          <textarea rows=\"5\" placeholder=\"Type here...\"></textarea>\r\n        </div>\r\n        <div class=\"post-send-btn\">\r\n          <button>TWEET</button>\r\n        </div>\r\n      </div>\r\n    <div style=\"clear: both;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TheTweet from \"@/components/TheTweet\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  components: {TheTweet},\r\n\r\n  data() {\r\n    return {\r\n      allTweets: [],\r\n      postModal: false,\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadTweets()\r\n  },\r\n\r\n  methods: {\r\n    loadTweets() {\r\n      try {\r\n        axios\r\n            .get('https://vue-mini-twitter-default-rtdb.firebaseio.com/tweets.json')\r\n            .then((res) => {\r\n              this.allTweets = Object.keys(res.data).map(key => {\r\n                return {\r\n                  id: key,\r\n                  ...res.data[key]\r\n                }\r\n              })\r\n            })\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n\r\n    sendTweet() {\r\n      const currentDate = new Date();\r\n\r\n      try {\r\n        axios\r\n            .post('https://vue-mini-twitter-default-rtdb.firebaseio.com/tweets.json', {\r\n              date: currentDate.toLocaleDateString(),\r\n              likes: 15,\r\n              text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n              comments: [\"This is comment\", \"Second comment\"]\r\n            })\r\n            .then((res) => {\r\n              console.log(res.data)\r\n            })\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  margin-top: 30px;\r\n}\r\n\r\n.btn-make-tweet {\r\n  position: fixed;\r\n  bottom: 50px;\r\n  width: 720px;\r\n  height: 70px;\r\n  box-shadow: 0 10px 20px #96D9F9;\r\n  border-radius: 20px;\r\n  border: none;\r\n  background-color: #00B2FF;\r\n  color: white;\r\n  font-family: Montserrat-SemiBold;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, .5);\r\n}\r\n\r\n.post-modal {\r\n  border-radius: 30px;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 720px;\r\n  padding: 40px;\r\n  background-color: white;\r\n}\r\n\r\n.post-title {\r\n  text-align: center;\r\n  font-family: Montserrat-SemiBold;\r\n  font-size: 24px;\r\n}\r\n\r\n.post-text {\r\n  width: 95%;\r\n}\r\n\r\n.post-text textarea {\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  resize: none;\r\n  padding: 16px;\r\n  font-family: Montserrat-Regular;\r\n  font-size: 1rem;\r\n  border-radius: 18px;\r\n  background-color: #f2f2f5;\r\n  outline: none;\r\n  border: none;\r\n}\r\n\r\n.post-send-btn button {\r\n  width: 100%;\r\n  height: 62px;\r\n  border-radius: 14px;\r\n  border: none;\r\n  background-color: #00B2FF;\r\n  font-family: Montserrat-SemiBold;\r\n  font-size: 1rem;\r\n  color: white;\r\n  cursor: pointer;\r\n  box-shadow: 0 10px 20px #96D9F9;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}