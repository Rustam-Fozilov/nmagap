{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withKeys as _withKeys, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"Realtime chat app\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"chat\"\n};\nconst _hoisted_4 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_5 = {\n  class: \"messages\",\n  ref: \"autoScroll\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message.text), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"span\", null, _toDisplayString(message.username), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"textarea\", {\n    onKeyup: _cache[0] || (_cache[0] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event),\n    placeholder: \"Type message and click Enter to send\",\n    class: \"form-control\",\n    rows: \"3\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.message]])])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAqD;EAAjDC,KAA0B,EAA1B;IAAA;EAAA;AAA0B,GAAC,mBAAiB;;EAC3CC,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC,UAAU;EAACC,GAAG,EAAC;;;6DAJhCC,UAAqD,EACrDJ,oBAoBM,OApBNK,UAoBM,GAnBJL,oBAkBM,OAlBNM,UAkBM,GAjBJN,oBAgBM,OAhBNO,UAgBM,GAfJP,oBAKM,OALNQ,UAKM,sBAJJC,oBAGMC,6BAHiBC,iBAAW,EAAtBC,OAAO;yBAAnBH,oBAGM;MAH+BI,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEZ,KAAK,EAAC;QAC1DF,oBAAyB,4BAAnBY,OAAO,CAACG,IAAI,kBAClBf,oBAA8C,cAAzCA,oBAAmC,+BAA1BY,OAAO,CAACI,QAAQ;0DAGlChB,oBAQO,+BAPLA,oBAMY;IALPiB,OAAK,mDAAQC,qDAAW;+DAChBP,aAAO;IAChBQ,WAAW,EAAC,sCAAsC;IAClDjB,KAAK,EAAC,cAAc;IACpBkB,IAAI,EAAC;iEAHIT,aAAO","names":["_createElementVNode","style","class","ref","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","$data","message","key","id","text","username","onKeyup","$options","placeholder","rows"],"sourceRoot":"","sources":["C:\\Users\\Rustam\\Desktop\\vue-realtime-chat\\src\\App.vue"],"sourcesContent":["<template>\n  <h1 style=\"text-align: center\">Realtime chat app</h1>\n  <div class=\"wrapper\">\n    <div class=\"chat\">\n      <div class=\"chat-messages\">\n        <div class=\"messages\" ref=\"autoScroll\">\n          <div v-for=\"message in allMessages\" :key=\"message.id\" class=\"message\">\n            <p>{{ message.text }}</p>\n            <div><span>{{ message.username }}</span></div>\n          </div>\n        </div>\n        <form>\n          <textarea\n              @keyup.enter=\"sendMessage\"\n              v-model=\"message\"\n              placeholder=\"Type message and click Enter to send\"\n              class=\"form-control\"\n              rows=\"3\"\n          ></textarea>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: 'App',\n\n  data() {\n    return {\n      allMessages: [],\n      message: '',\n      username: '',\n    }\n  },\n\n  beforeMount() {\n    // this.username = prompt('Ismingizni kiriting')\n    this.getAllMessages();\n  },\n\n  updated() {\n    this.$refs['autoScroll'].scrollTop = 9999999999;\n  },\n\n  methods: {\n    getAllMessages() {\n      try {\n        axios\n            .get('https://vue-realtime-chat-a5aec-default-rtdb.firebaseio.com/messages.json')\n            .then((res) => {\n              this.allMessages = Object.keys(res.data).map(key => {\n                return {\n                  id: key,\n                  ...res.data[key]\n                }\n              })\n            })\n\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    sendMessage() {\n      try {\n        axios\n            .post('https://vue-realtime-chat-a5aec-default-rtdb.firebaseio.com/messages.json', {\n              text: this.message,\n              username: this.username\n            })\n            .then((res) => {\n              this.message = ''\n            })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  },\n\n  watch: {\n    allMessages() {\n      this.getAllMessages();\n    }\n  }\n}\n</script>\n\n<style>\nhtml,\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n  background-color: #f2f2f5;\n}\n\n.my-message {\n  background-color: #C8CEDE !important;\n}\n\n.wrapper {\n  width: 700px;\n  margin: 70px auto;\n}\n\n.chat {\n  background-color: white;\n  border-radius: 20px;\n  padding: 20px;\n  height: 600px;\n}\n\n.chat-messages {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  flex: 1;\n  padding: 30px;\n}\n\n.messages {\n  flex: 1;\n  overflow: auto;\n}\n\n.message {\n  margin-bottom: 20px;\n}\n\n.message p {\n  display: inline-flex;\n  border-radius: 8px;\n  background-color: #f2f2f5;\n  padding: 12px 20px;\n  margin: 0;\n}\n\n.message span {\n  opacity: 0.5;\n  font-size: 14px;\n}\n\n.chat-messages form {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid rgb(200, 200, 200);\n}\n\n.chat-messages form textarea {\n  width: 100%;\n  resize: none;\n  outline: none;\n  border: none;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  padding: 10px;\n  height: 80px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 16px;\n  margin-bottom: 30px;\n}\n\n.btn-primary {\n  padding: 12px 35px;\n  margin-top: 10px;\n  border: none;\n  font-size: 16px;\n  border-radius: 10px;\n  background: #151515;\n  color: white;\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}